# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Modulation_and_Demodulation.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from AM_Demodulation import *
from FM_Demodulation import *

class Modem_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1342, 748)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QWidget{\n"
"    \n"
"    background-color: rgb(234, 234, 234);\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-90, -10, 1721, 51))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("QLabel{\n"
"    \n"
"    background-color: rgb(50, 75, 97);\n"
"    color: White;\n"
"}")
        self.label.setObjectName("label")
        self.FM_graph = QtWidgets.QLabel(self.centralwidget)
        self.FM_graph.setGeometry(QtCore.QRect(30, 50, 651, 371))
        self.FM_graph.setStyleSheet("")
        self.FM_graph.setText("")
        self.FM_graph.setPixmap(QtGui.QPixmap("FM_Modulation.jpg"))
        self.FM_graph.setScaledContents(True)
        self.FM_graph.setObjectName("FM_graph")
        self.pushButton_Home = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Home.setGeometry(QtCore.QRect(665, 657, 40, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Home.setFont(font)
        self.pushButton_Home.setStyleSheet("QPushButton\n"
"{\n"
"background-color: rgb(51, 51, 51, 0);\n"
"color:white;\n"
"border:none;\n"
"border-radius:20px;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"    \n"
"    background-color: rgb(51, 51, 51, 0.3);\n"
"}\n"
"\n"
"")
        self.pushButton_Home.setText("")
        self.pushButton_Home.setObjectName("pushButton_Home")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(670, 660, 31, 31))
        self.label_22.setStyleSheet("QLabel\n"
"{\n"
"border:none;\n"
"border-radius:20px;\n"
"}\n"
"\n"
"")
        self.label_22.setText("")
        self.label_22.setPixmap(QtGui.QPixmap("Home_Icon.png"))
        self.label_22.setScaledContents(True)
        self.label_22.setObjectName("label_22")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(1100, 5, 31, 31))
        self.label_2.setStyleSheet("background-color: rgb(50, 75, 97);")
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("../../../../.designer/backup/run_icon.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.label_51 = QtWidgets.QLabel(self.centralwidget)
        self.label_51.setGeometry(QtCore.QRect(710, 50, 641, 471))
        self.label_51.setStyleSheet("border:4px solid black;")
        self.label_51.setText("")
        self.label_51.setPixmap(QtGui.QPixmap("graph0.png"))
        self.label_51.setScaledContents(True)
        self.label_51.setObjectName("label_51")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 460, 451, 211))
        self.label_4.setStyleSheet("background-color: rgb(234, 234, 234);\n"
"border:2px solid   rgb(106, 106, 106);\n"
"border-radius:15px;")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.pushButton_display_graph = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_display_graph.setGeometry(QtCore.QRect(1230, 530, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_display_graph.setFont(font)
        self.pushButton_display_graph.setStyleSheet("QPushButton{\n"
"    background-color: rgb(126, 190, 200);\n"
"   color:white;\n"
"   border:none;\n"
"   border-radius:5px;   \n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(110, 158, 200);\n"
"}")
        self.pushButton_display_graph.setObjectName("pushButton_display_graph")
        self.pushButton_Message_signal = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Message_signal.setGeometry(QtCore.QRect(890, 640, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Message_signal.setFont(font)
        self.pushButton_Message_signal.setStyleSheet("QPushButton{\n"
"    background-color: rgb(126, 190, 200);\n"
"   color:white;\n"
"   border:none;\n"
"   border-radius:5px;   \n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(110, 158, 200);\n"
"}")
        self.pushButton_Message_signal.setObjectName("pushButton_Message_signal")
        self.pushButton_Carrier_signal = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Carrier_signal.setGeometry(QtCore.QRect(1050, 640, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Carrier_signal.setFont(font)
        self.pushButton_Carrier_signal.setStyleSheet("QPushButton{\n"
"    background-color: rgb(126, 190, 200);\n"
"   color:white;\n"
"   border:none;\n"
"   border-radius:5px;   \n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(110, 158, 200);\n"
"}")
        self.pushButton_Carrier_signal.setObjectName("pushButton_Carrier_signal")
        self.AM_graph = QtWidgets.QLabel(self.centralwidget)
        self.AM_graph.setGeometry(QtCore.QRect(30, 50, 651, 371))
        self.AM_graph.setStyleSheet("")
        self.AM_graph.setText("")
        self.AM_graph.setPixmap(QtGui.QPixmap("AM_modulation.jpg"))
        self.AM_graph.setScaledContents(True)
        self.AM_graph.setObjectName("AM_graph")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 480, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(234, 234, 234);\n"
"color:;\n"
"color: rgb(85, 0, 0);")
        self.label_3.setObjectName("label_3")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(190, 480, 61, 21))
        self.comboBox.setStyleSheet("border:none;\n"
"background-color:white;")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.lineEdit_AmplitudeofAM = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_AmplitudeofAM.setGeometry(QtCore.QRect(60, 570, 113, 31))
        self.lineEdit_AmplitudeofAM.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border:none;\n"
"border-radius:7px;")
        self.lineEdit_AmplitudeofAM.setObjectName("lineEdit_AmplitudeofAM")
        self.lineEdit_u_and_kf = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_u_and_kf.setGeometry(QtCore.QRect(370, 569, 81, 31))
        self.lineEdit_u_and_kf.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border:none;\n"
"border-radius:7px;")
        self.lineEdit_u_and_kf.setObjectName("lineEdit_u_and_kf")
        self.lineEdit_AmplitudeofFM = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_AmplitudeofFM.setGeometry(QtCore.QRect(210, 570, 113, 31))
        self.lineEdit_AmplitudeofFM.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border:none;\n"
"border-radius:7px;")
        self.lineEdit_AmplitudeofFM.setObjectName("lineEdit_AmplitudeofFM")
        self.lineEdit_FrequencyofAM = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_FrequencyofAM.setGeometry(QtCore.QRect(60, 620, 111, 31))
        self.lineEdit_FrequencyofAM.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border:none;\n"
"border-radius:7px;")
        self.lineEdit_FrequencyofAM.setObjectName("lineEdit_FrequencyofAM")
        self.lineEdit_FrequencyfFM = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_FrequencyfFM.setGeometry(QtCore.QRect(210, 620, 113, 31))
        self.lineEdit_FrequencyfFM.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border:none;\n"
"border-radius:7px;")
        self.lineEdit_FrequencyfFM.setObjectName("lineEdit_FrequencyfFM")
        self.pushButton_Demodulation = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Demodulation.setGeometry(QtCore.QRect(60, 520, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Demodulation.setFont(font)
        self.pushButton_Demodulation.setStyleSheet("QPushButton{\n"
"    background-color: rgb(126, 190, 200);\n"
"   color:white;\n"
"   border:none;\n"
"   border-radius:5px;   \n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(110, 158, 200);\n"
"}")
        self.pushButton_Demodulation.setObjectName("pushButton_Demodulation")
        self.pushButton_Lab_Manual = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Lab_Manual.setGeometry(QtCore.QRect(1190, 0, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Lab_Manual.setFont(font)
        self.pushButton_Lab_Manual.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Lab_Manual.setStyleSheet("QPushButton\n"
"{\n"
"border:none;\n"
"color:white;\n"
"    background-color: rgb(127, 110, 87);\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"    \n"
"    background-color: rgb(51, 51, 51, 0.5);\n"
"}")
        self.pushButton_Lab_Manual.setObjectName("pushButton_Lab_Manual")
        self.FM_graph.raise_()
        self.label.raise_()
        self.label_22.raise_()
        self.pushButton_Home.raise_()
        self.label_2.raise_()
        self.label_51.raise_()
        self.label_4.raise_()
        self.pushButton_display_graph.raise_()
        self.pushButton_Message_signal.raise_()
        self.pushButton_Carrier_signal.raise_()
        self.AM_graph.raise_()
        self.label_3.raise_()
        self.comboBox.raise_()
        self.lineEdit_AmplitudeofAM.raise_()
        self.lineEdit_u_and_kf.raise_()
        self.lineEdit_AmplitudeofFM.raise_()
        self.lineEdit_FrequencyofAM.raise_()
        self.lineEdit_FrequencyfFM.raise_()
        self.pushButton_Demodulation.raise_()
        self.pushButton_Lab_Manual.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton_display_graph.clicked.connect(self.displayer)
        self.pushButton_Message_signal.clicked.connect(self.message_signal_displayer)
        self.pushButton_Carrier_signal.clicked.connect(self.carrier_signal_displayer)
        self.pushButton_Demodulation.clicked.connect(self.demodulator)
    def displayer(self):

            mess_signal_amp = int(self.lineEdit_AmplitudeofAM.text())
            mess_signal_fre = int(self.lineEdit_FrequencyofAM.text())
            carrier_signal_amp = int(self.lineEdit_AmplitudeofFM.text())
            carrier_signal_fre = int(self.lineEdit_FrequencyfFM.text())
            # indexs = int(self.lineEdit_u_and_kf.text())
            # time = int(self.lineEdit_Time.text())
            print("hellow i am here")
            if self.comboBox.currentText() == "AM":
                    am_modulated_signal(mess_signal_amp, mess_signal_fre, carrier_signal_amp, carrier_signal_fre)
                    self.label_51.setPixmap(QtGui.QPixmap("graph44.png"))
                    self.label.setScaledContents(True)
                    self.FM_graph.hide()
                    self.AM_graph.show()
            if self.comboBox.currentText() =="FM":
                    fm_modulated_signal(mess_signal_amp, mess_signal_fre, carrier_signal_amp, carrier_signal_fre)
                    self.label_51.setPixmap(QtGui.QPixmap("graph66.png"))
                    self.label.setScaledContents(True)
                    self.FM_graph.show()
                    self.AM_graph.hide()
            else:
                    print("check your input")

    def message_signal_displayer(self):

            mess_signal_amp = int(self.lineEdit_AmplitudeofAM.text())
            mess_signal_fre = int(self.lineEdit_FrequencyofAM.text())
            # indexs = int(self.lineEdit_u_and_kf.text())
            # time = int(self.lineEdit_Time.text())
            messag_signal(mess_signal_amp, mess_signal_fre)
            self.label_51.setPixmap(QtGui.QPixmap("graph22.png"))
            self.label.setScaledContents(True)

    def carrier_signal_displayer(self):

            carrier_signal_amp = int(self.lineEdit_AmplitudeofFM.text())
            carrier_signal_fre = int(self.lineEdit_FrequencyfFM.text())
            # indexs = int(self.lineEdit_u_and_kf.text())
            # time = int(self.lineEdit_Time.text())
            carrier_signal(carrier_signal_amp, carrier_signal_fre)
            self.label_51.setPixmap(QtGui.QPixmap("graph33.png"))
            self.label.setScaledContents(True)

    def demodulator(self):
            mess_signal_amp = int(self.lineEdit_AmplitudeofAM.text())
            mess_signal_fre = int(self.lineEdit_FrequencyofAM.text())
            carrier_signal_amp = int(self.lineEdit_AmplitudeofFM.text())
            carrier_signal_fre = int(self.lineEdit_FrequencyfFM.text())
            # indexs = int(self.lineEdit_u_and_kf.text())
            # time = int(self.lineEdit_Time.text())
            if self.comboBox.currentText() =="AM":
                    demodulated_signal(mess_signal_amp, mess_signal_fre, carrier_signal_amp, carrier_signal_fre)
                    self.label_51.setPixmap(QtGui.QPixmap("graph55.png"))
                    self.label.setScaledContents(True)
            if self.comboBox.currentText() == "FM":
                    self.label_51.setPixmap(QtGui.QPixmap("graph88.png"))
                    self.label.setScaledContents(True)
            else:
                    print("check your input")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Modulation/Demodulation"))
        self.label.setText(_translate("MainWindow", "                          Modulation/Demodulation"))
        self.pushButton_display_graph.setText(_translate("MainWindow", "Display"))
        self.pushButton_Message_signal.setText(_translate("MainWindow", "M(t)"))
        self.pushButton_Carrier_signal.setText(_translate("MainWindow", "C(t)"))
        self.label_3.setText(_translate("MainWindow", "  Modulation Type"))
        self.comboBox.setItemText(0, _translate("MainWindow", "AM"))
        self.comboBox.setItemText(1, _translate("MainWindow", "FM"))
        self.lineEdit_AmplitudeofAM.setPlaceholderText(_translate("MainWindow", "   Amplitude of AM"))
        self.lineEdit_u_and_kf.setPlaceholderText(_translate("MainWindow", "     µ/Kf"))
        self.lineEdit_AmplitudeofFM.setPlaceholderText(_translate("MainWindow", "     Amplitude of FM"))
        self.lineEdit_FrequencyofAM.setPlaceholderText(_translate("MainWindow", "Frequency of AM"))
        self.lineEdit_FrequencyfFM.setPlaceholderText(_translate("MainWindow", "Frequency of FM"))
        self.pushButton_Demodulation.setText(_translate("MainWindow", "Demodulation"))
        self.pushButton_Lab_Manual.setText(_translate("MainWindow", "Lab Manual"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Modem_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
